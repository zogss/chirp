import { SignOutButton } from "@clerk/clerk-react";
import { SignIn, SignInButton, useUser } from "@clerk/nextjs";
import moment from "moment";
import Head from "next/head";
import Image from "next/image";
import { api, RouterOutputs } from "~/utils/api";

import type { NextPage } from "next";
const CreatePostWizard = () => {
  const { user } = useUser();

  if (!user) return null;

  return (
    <div className="flex w-full gap-3">
      <Image
        src={user.profileImageUrl}
        alt="Profile image"
        className="rounded-full"
        width={56}
        height={56}
        placeholder="blur"
        blurDataURL="https://img.freepik.com/free-vector/white-blurred-background_1034-249.jpg"
      />
      <input
        type="text"
        placeholder="Type some emojis!"
        className="grow bg-transparent outline-none"
      />
    </div>
  );
};

type PostWithUser = RouterOutputs["posts"]["getAll"][number];

const PostView = ({ post, author }: PostWithUser) => {
  return (
    <div className="flex gap-3 border-b border-slate-400 p-4">
      <Image
        src={author?.profileImageUrl}
        alt={`${author.username || "user"} - profile image`}
        className="rounded-full"
        width={48}
        height={48}
        placeholder="blur"
        blurDataURL="https://img.freepik.com/free-vector/white-blurred-background_1034-249.jpg"
      />
      <div className="flex flex-col ">
        <div className="flex gap-2">
          <span className="font-semibold text-slate-300">{`${
            author.firstName || ""
          } ${author.lastName || ""}`}</span>
          <div className="text-slate-500">
            <span>{`@${author.username}`}</span>
            <span className="px-1">â€¢</span>
            <span>{moment(post.createdAt).startOf("hour").fromNow()}</span>
          </div>
        </div>
        <p className="">{post.content}</p>
      </div>
    </div>
  );
};

const Home: NextPage = () => {
  const { isSignedIn } = useUser();
  const { data, isLoading } = api.posts.getAll.useQuery();

  return isLoading ? (
    <div>Loading...</div>
  ) : (
    <>
      <Head>
        <title>Chirp app</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="flex h-full items-center justify-center">
        <div className="h-screen w-full border-x border-slate-400 md:max-w-2xl">
          <div className="flex w-full justify-start border-b border-slate-400 p-4">
            {!!isSignedIn ? (
              <>
                <CreatePostWizard />
                <SignOutButton />
              </>
            ) : (
              <SignInButton />
            )}
          </div>
          <SignIn path="/sign-in" routing="path" signUpUrl="/sign-up" />
          <div className="flex flex-col">
            {data?.map(({ post, author }) => (
              <PostView key={post.id} {...{ post, author }} />
            ))}
          </div>
        </div>
      </main>
    </>
  );
};

export default Home;
